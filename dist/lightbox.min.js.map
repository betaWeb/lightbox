{"version":3,"sources":["src/utils.ts","src/Lightbox.ts","index.js"],"names":["globalThis","Lightbox"],"mappings":"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","file":"lightbox.min.js","sourceRoot":"..","sourcesContent":["export function debounce(callback: Function, delay: number): Function {\n    let timer;\n\n    return function() {\n        let args = arguments\n        let context = this\n\n        clearTimeout(timer)\n\n        timer = setTimeout(() => {\n            callback.apply(context, args)\n        }, delay)\n    }\n}","import {debounce} from \"./utils\";\n\ndeclare type Options = {\n    selector: string\n    lightbox_class: string\n    lightbox_inner_class: string\n    lightbox_legend_class: string\n    lightbox_visible_class: string\n    image_loading_class: string\n    prevent_scroll: boolean\n    prevent_scroll_class: string\n    prevent_scroll_element: HTMLElement\n    inner_offset: number,\n    nav: boolean,\n    nav_prev_class: string\n    nav_next_class: string\n}\n\ndeclare interface LightboxListItem {\n    el?: HTMLElement,\n    event_handler?: Function\n    lightbox?: HTMLDivElement\n    lightbox_inner?: HTMLDivElement\n    src?: string\n}\n\ndeclare type AspectRatio = {\n    ratio: number\n    width: number\n    height: number\n    orientation: string\n}\n\ndeclare type Groups = {\n    [key: string]: LightboxListItem[]\n}\n\ndeclare type Current = {\n    group: string\n    index: number\n}\n\nexport default class Lightbox<T> {\n\n    public elements: NodeList\n\n    public options: Options\n\n    private _groups: Groups = {}\n\n    private _lightbox: HTMLDivElement = null\n\n    private _lightbox_inner: HTMLDivElement = null\n\n    private _image: HTMLImageElement = null\n\n    private _nav_prev: HTMLDivElement = null\n\n    private _nav_next: HTMLDivElement = null\n\n    private _current: Current = {\n        group: '',\n        index: -1\n    }\n\n    public static get default_options(): Options {\n        return {\n            selector: '.lightbox--link',\n            lightbox_class: 'lightbox',\n            lightbox_inner_class: 'lightbox--inner',\n            lightbox_legend_class: 'lightbox--legend',\n            lightbox_visible_class: 'visible',\n            image_loading_class: 'is-loading',\n            prevent_scroll: true,\n            prevent_scroll_class: 'prevent-scroll',\n            prevent_scroll_element: document.body,\n            inner_offset: 30,\n            nav: true,\n            nav_prev_class: 'lightbox--prev',\n            nav_next_class: 'lightbox--next'\n        }\n    }\n\n    constructor(options = {}) {\n        this.options = {\n            ...Lightbox.default_options,\n            ...options\n        }\n\n        this.elements = document.querySelectorAll(this.options.selector)\n\n        if (this.elements.length === 0) {\n            return\n        }\n\n        this.hide = this.hide.bind(this)\n        this.prev = this.prev.bind(this)\n        this.next = this.next.bind(this)\n        this.onEscape = this.onEscape.bind(this)\n        this.onResize = this.onResize.bind(this)\n\n        this.attachEvents()\n    }\n\n    public show(src: string): void {\n        this._lightbox.classList.add(this.options.image_loading_class)\n\n        this._image = new Image()\n\n        this._image.onload = async (): Promise<void> => {\n            await this.setInnerBoundings()\n\n            this._lightbox_inner.style.backgroundImage = `url('${this._image.src}')`\n\n            setTimeout(() => {\n                this._lightbox.classList.remove(this.options.image_loading_class)\n            }, 300)\n        }\n\n        this._image.src = src\n\n        if (this.options.prevent_scroll) {\n            this.options.prevent_scroll_element.classList.add(this.options.prevent_scroll_class)\n        }\n\n        this._lightbox.classList.add(this.options.lightbox_visible_class)\n    }\n\n    public hide(): this {\n        this._lightbox.classList.remove(this.options.lightbox_visible_class)\n\n        if (this.options.prevent_scroll) {\n            this.options.prevent_scroll_element.classList.remove(this.options.prevent_scroll_class)\n        }\n\n        this._lightbox_inner.style.backgroundImage = null\n        this._image = null\n\n        this.setCurrent()\n\n        return this\n    }\n\n    public prev(): this {\n        return this.nav(-1)\n    }\n\n    public next(): this {\n        return this.nav(1)\n    }\n\n    public destroy(): void {\n        for (let group in this._groups) {\n            if (this._groups.hasOwnProperty(group)) {\n                const entries = Object.values(this._groups[group])\n\n                if (entries.length > 0) {\n                    entries.forEach((entry: LightboxListItem): void => {\n                        if (entry.lightbox_inner) {\n                            entry.lightbox_inner.removeEventListener('click', (e: MouseEvent) => e.stopPropagation())\n                            entry.lightbox_inner.remove()\n                        }\n\n                        entry.el.removeEventListener('click', entry.event_handler as EventListener)\n                    })\n                }\n            }\n        }\n\n        window.removeEventListener('resize', debounce(this.onResize, 300) as EventListener)\n        window.removeEventListener('keyup', this.onEscape)\n\n        this._nav_prev.removeEventListener('click', this.prev)\n        this._nav_next.removeEventListener('click', this.next)\n\n        this._lightbox.removeEventListener('click', this.hide)\n        this._lightbox.remove()\n\n        this._lightbox = null\n        this._lightbox_inner = null\n        this._image = null\n        this._groups = {}\n        this._nav_prev = null\n        this._nav_next = null\n\n        this.setCurrent()\n    }\n\n    private nav(direction) {\n        const {group, index} = this._current\n        const count = Object.keys(this._groups[group]).length\n        const newIndex = direction < 0\n         ? index - 1 < 0 ? count : index\n         : index + 1 === count ? -1 : index\n\n        let item: LightboxListItem = this._groups[group][newIndex + direction]\n\n        this.hide()\n\n        this.setCurrent(group, newIndex + direction)\n\n        this.show(item.src)\n\n        return this\n    }\n\n    private createLightBox(): void {\n        this._lightbox_inner = document.createElement('div')\n        this._lightbox_inner.classList.add(this.options.lightbox_inner_class)\n\n        this._lightbox = document.createElement('div')\n        this._lightbox.classList.add(this.options.lightbox_class)\n        this._lightbox.appendChild(this._lightbox_inner)\n\n        if (this.options.nav === true) {\n            const nav_prev = document.createElement('div')\n            const nav_next = document.createElement('div')\n\n            nav_prev.classList.add(this.options.nav_prev_class)\n            nav_next.classList.add(this.options.nav_next_class)\n\n            nav_prev.addEventListener('click', this.prev)\n            nav_next.addEventListener('click', this.next)\n\n            this._lightbox_inner.appendChild(nav_prev)\n            this._lightbox_inner.appendChild(nav_next)\n\n            this._nav_prev = nav_prev\n            this._nav_next = nav_next\n        }\n\n        document.body.appendChild(this._lightbox)\n    }\n\n    private attachEvents(): void {\n        window.addEventListener('resize', debounce(this.onResize, 300) as EventListener)\n        window.addEventListener('keyup', this.onEscape)\n\n        this.createLightBox()\n\n        this.elements.forEach(async (el: HTMLElement): Promise<void> => {\n            await this.storeElement(el)\n        })\n    }\n\n    private createLegend(legend: string): void {\n        const div = document.createElement('div')\n\n        div.classList.add(this.options.lightbox_legend_class)\n        div.innerHTML = legend\n\n        this._lightbox_inner.appendChild(div)\n    }\n\n    private async storeElement(el: HTMLImageElement|HTMLElement): Promise<void> {\n        const src = el.constructor === HTMLImageElement ? el.src : el.dataset.src\n        const group = el.dataset.group || 'default'\n        // const legend = el.dataset.legend || null\n\n        if (!this._groups[group]) {\n            this._groups[group] = []\n        }\n\n        /*if (legend !== null) {\n            this.createLegend(legend)\n        }*/\n\n        this._lightbox.addEventListener('click', this.hide)\n        this._lightbox_inner.addEventListener('click', (e: MouseEvent) => e.stopPropagation())\n\n        const item: LightboxListItem = {\n            el,\n            lightbox: this._lightbox,\n            lightbox_inner: this._lightbox_inner,\n            src\n        }\n        const index: number = this._groups[group].push(item) - 1\n\n        const event_handler = (): void => {\n            this.setCurrent(group, index)\n\n            this.show(src)\n        }\n\n        this._groups[group][index].event_handler = event_handler\n\n        el.addEventListener('click', event_handler as EventListener)\n    }\n\n    private onEscape(e: KeyboardEvent): void {\n        if (e.key === 'Escape') {\n            this.hide()\n        }\n    }\n\n    private async onResize(): Promise<void> {\n        if (this._image !== null) {\n            await this.setInnerBoundings()\n        }\n    }\n\n    private async setInnerBoundings(): Promise<void> {\n        const { naturalWidth, naturalHeight } = this._image\n        const ratio = this.aspectRatioFit(\n            naturalWidth,\n            naturalHeight,\n            window.innerWidth,\n            window.innerHeight\n        ) as AspectRatio\n        const {width, height, orientation} = ratio\n        const { inner_offset } = this.options\n\n        let offsetWidth = 0\n        let offsetHeight = 0\n\n        switch (orientation) {\n            case 'landscape':\n                offsetWidth = inner_offset\n                break\n            case 'portrait':\n                offsetHeight = inner_offset\n                break\n            case 'even':\n                offsetWidth = inner_offset\n                offsetHeight = inner_offset\n                break\n        }\n\n        this._lightbox_inner.style.width = `${width - (2 * offsetWidth)}px`\n        this._lightbox_inner.style.height = `${height - (2 * offsetHeight)}px`\n    }\n\n    private aspectRatioFit(\n        srcWidth: number,\n        srcHeight: number,\n        maxWidth: number,\n        maxHeight: number\n    ): AspectRatio {\n        let ratio = Math.min(maxWidth / srcWidth, maxHeight / srcHeight)\n        let orientation = 'even'\n\n        if (srcWidth > srcHeight) {\n            orientation ='landscape'\n        } else if (srcWidth < srcHeight) {\n            orientation = 'portrait'\n        }\n\n        let width = srcWidth * ratio\n        let height = srcHeight * ratio\n\n        if (width <= maxWidth || height <= maxHeight) {\n            orientation = 'even'\n        }\n\n        return {\n            ratio,\n            width,\n            height,\n            orientation\n        }\n    }\n\n    private setCurrent(\n        group: string = '',\n        index: number = -1\n    ) {\n        this._current.group = group\n        this._current.index = index\n    }\n}\n\nif (window && document) {\n    window['Lightbox'] = Lightbox\n}\n","import Lightbox from \"./src/Lightbox\"\n\nglobalThis.Lightbox = Lightbox"]}